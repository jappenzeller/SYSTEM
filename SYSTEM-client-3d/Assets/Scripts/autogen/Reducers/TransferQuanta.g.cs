// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void TransferQuantaHandler(ReducerEventContext ctx, ulong fromPlayerId, ulong toPlayerId, FrequencyBand frequencyBand, uint amount);
        public event TransferQuantaHandler? OnTransferQuanta;

        public void TransferQuanta(ulong fromPlayerId, ulong toPlayerId, FrequencyBand frequencyBand, uint amount)
        {
            conn.InternalCallReducer(new Reducer.TransferQuanta(fromPlayerId, toPlayerId, frequencyBand, amount), this.SetCallReducerFlags.TransferQuantaFlags);
        }

        public bool InvokeTransferQuanta(ReducerEventContext ctx, Reducer.TransferQuanta args)
        {
            if (OnTransferQuanta == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnTransferQuanta(
                ctx,
                args.FromPlayerId,
                args.ToPlayerId,
                args.FrequencyBand,
                args.Amount
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class TransferQuanta : Reducer, IReducerArgs
        {
            [DataMember(Name = "from_player_id")]
            public ulong FromPlayerId;
            [DataMember(Name = "to_player_id")]
            public ulong ToPlayerId;
            [DataMember(Name = "frequency_band")]
            public FrequencyBand FrequencyBand;
            [DataMember(Name = "amount")]
            public uint Amount;

            public TransferQuanta(
                ulong FromPlayerId,
                ulong ToPlayerId,
                FrequencyBand FrequencyBand,
                uint Amount
            )
            {
                this.FromPlayerId = FromPlayerId;
                this.ToPlayerId = ToPlayerId;
                this.FrequencyBand = FrequencyBand;
                this.Amount = Amount;
            }

            public TransferQuanta()
            {
            }

            string IReducerArgs.ReducerName => "transfer_quanta";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags TransferQuantaFlags;
        public void TransferQuanta(CallReducerFlags flags) => TransferQuantaFlags = flags;
    }
}
