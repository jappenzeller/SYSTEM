// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void DebugGiveQuantaHandler(ReducerEventContext ctx, ulong playerId, float frequency, uint amount);
        public event DebugGiveQuantaHandler? OnDebugGiveQuanta;

        public void DebugGiveQuanta(ulong playerId, float frequency, uint amount)
        {
            conn.InternalCallReducer(new Reducer.DebugGiveQuanta(playerId, frequency, amount), this.SetCallReducerFlags.DebugGiveQuantaFlags);
        }

        public bool InvokeDebugGiveQuanta(ReducerEventContext ctx, Reducer.DebugGiveQuanta args)
        {
            if (OnDebugGiveQuanta == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnDebugGiveQuanta(
                ctx,
                args.PlayerId,
                args.Frequency,
                args.Amount
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class DebugGiveQuanta : Reducer, IReducerArgs
        {
            [DataMember(Name = "player_id")]
            public ulong PlayerId;
            [DataMember(Name = "frequency")]
            public float Frequency;
            [DataMember(Name = "amount")]
            public uint Amount;

            public DebugGiveQuanta(
                ulong PlayerId,
                float Frequency,
                uint Amount
            )
            {
                this.PlayerId = PlayerId;
                this.Frequency = Frequency;
                this.Amount = Amount;
            }

            public DebugGiveQuanta()
            {
            }

            string IReducerArgs.ReducerName => "debug_give_quanta";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags DebugGiveQuantaFlags;
        public void DebugGiveQuanta(CallReducerFlags flags) => DebugGiveQuantaFlags = flags;
    }
}
