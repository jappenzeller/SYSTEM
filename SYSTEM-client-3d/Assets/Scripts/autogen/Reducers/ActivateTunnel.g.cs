// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void ActivateTunnelHandler(ReducerEventContext ctx, ulong tunnelId, float energyAmount);
        public event ActivateTunnelHandler? OnActivateTunnel;

        public void ActivateTunnel(ulong tunnelId, float energyAmount)
        {
            conn.InternalCallReducer(new Reducer.ActivateTunnel(tunnelId, energyAmount), this.SetCallReducerFlags.ActivateTunnelFlags);
        }

        public bool InvokeActivateTunnel(ReducerEventContext ctx, Reducer.ActivateTunnel args)
        {
            if (OnActivateTunnel == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnActivateTunnel(
                ctx,
                args.TunnelId,
                args.EnergyAmount
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class ActivateTunnel : Reducer, IReducerArgs
        {
            [DataMember(Name = "tunnel_id")]
            public ulong TunnelId;
            [DataMember(Name = "energy_amount")]
            public float EnergyAmount;

            public ActivateTunnel(
                ulong TunnelId,
                float EnergyAmount
            )
            {
                this.TunnelId = TunnelId;
                this.EnergyAmount = EnergyAmount;
            }

            public ActivateTunnel()
            {
            }

            string IReducerArgs.ReducerName => "activate_tunnel";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags ActivateTunnelFlags;
        public void ActivateTunnel(CallReducerFlags flags) => ActivateTunnelFlags = flags;
    }
}
